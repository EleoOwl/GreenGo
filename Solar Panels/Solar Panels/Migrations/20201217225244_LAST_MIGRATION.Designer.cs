// <auto-generated />
using System;
using GreenGo.DB.API.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GreenGo.DB.API.Migrations
{
    [DbContext(typeof(PanelsContext))]
    [Migration("20201217225244_LAST_MIGRATION")]
    partial class LAST_MIGRATION
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GreenGo.DB.API.Entities.Inverter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<double>("Power");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Inverters");

                    b.HasData(
                        new { Id = new Guid("92a42ce5-f8e0-4eb5-925f-8fb654d7bae5"), Company = "not THE BEST COMPANY", Power = 24.0, Price = 8000.0 },
                        new { Id = new Guid("f563340f-2340-45df-b4df-de0903d960ea"), Power = 0.0, Price = 0.0 }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.Panel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company")
                        .IsRequired();

                    b.Property<double>("Power");

                    b.Property<double>("Price");

                    b.Property<double>("height");

                    b.Property<double>("width");

                    b.HasKey("Id");

                    b.ToTable("Panels");

                    b.HasData(
                        new { Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"), Company = "Green Life", Power = 45.0, Price = 4500.0, height = 40.0, width = 50.0 },
                        new { Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"), Company = "Yellow Life", Power = 60.0, Price = 7500.0, height = 50.0, width = 50.0 },
                        new { Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"), Company = "Blue Life", Power = 70.0, Price = 9500.0, height = 60.0, width = 60.0 },
                        new { Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"), Company = "Violet Life", Power = 100.0, Price = 10500.0, height = 90.0, width = 80.0 }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.ReferenceTables", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdPanel");

                    b.Property<Guid>("IdStation");

                    b.HasKey("Id");

                    b.ToTable("ReferenceTables");

                    b.HasData(
                        new { Id = new Guid("ecf86545-e36d-462e-afdd-c2d88a06f276"), IdPanel = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"), IdStation = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade12") }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.SolarStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdInverter");

                    b.HasKey("Id");

                    b.ToTable("SolarStations");

                    b.HasData(
                        new { Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade12"), IdInverter = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.WindTurbine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<double>("Diameter");

                    b.Property<string>("Matherial");

                    b.Property<double>("Price");

                    b.Property<double>("defPower");

                    b.Property<int>("numBlades");

                    b.HasKey("Id");

                    b.ToTable("WindTurbines");
                });
#pragma warning restore 612, 618
        }
    }
}
