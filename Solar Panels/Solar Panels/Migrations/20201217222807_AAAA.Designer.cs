// <auto-generated />
using System;
using GreenGo.DB.API.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GreenGo.DB.API.Migrations
{
    [DbContext(typeof(PanelsContext))]
    [Migration("20201217222807_AAAA")]
    partial class AAAA
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GreenGo.DB.API.Entities.Inverter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<double>("Power");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Inverters");

                    b.HasData(
                        new { Id = new Guid("abd086ce-9949-478e-9115-a1eabb24b799"), Power = 0.0, Price = 0.0 },
                        new { Id = new Guid("edfa3244-14dd-4ab0-8357-a8c70b956299"), Power = 0.0, Price = 0.0 }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.Panel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company")
                        .IsRequired();

                    b.Property<double>("Power");

                    b.Property<double>("Price");

                    b.Property<double>("height");

                    b.Property<double>("width");

                    b.HasKey("Id");

                    b.ToTable("Panels");

                    b.HasData(
                        new { Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"), Company = "Green Life", Power = 45.0, Price = 4500.0, height = 40.0, width = 50.0 },
                        new { Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"), Company = "Yellow Life", Power = 60.0, Price = 7500.0, height = 50.0, width = 50.0 },
                        new { Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"), Company = "Blue Life", Power = 70.0, Price = 9500.0, height = 60.0, width = 60.0 },
                        new { Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"), Company = "Violet Life", Power = 100.0, Price = 10500.0, height = 90.0, width = 80.0 }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.ReferenceTables", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdInverter");

                    b.Property<Guid>("IdStation");

                    b.HasKey("Id");

                    b.ToTable("ReferenceTables");

                    b.HasData(
                        new { Id = new Guid("7b77955c-17e8-42a5-bc91-2406b5a1dea9"), IdInverter = new Guid("0263a551-f3fe-4b9b-9cb0-4d25008ca057"), IdStation = new Guid("d7306d10-f41f-420d-8194-a7d5dbe9216f") }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.SolarStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("SolarStations");

                    b.HasData(
                        new { Id = new Guid("5499038b-1e18-48ea-9fd0-1a61f97a727e") }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.WindTurbine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<double>("Diameter");

                    b.Property<string>("Matherial");

                    b.Property<double>("Price");

                    b.Property<double>("defPower");

                    b.Property<int>("numBlades");

                    b.HasKey("Id");

                    b.ToTable("WindTurbines");
                });
#pragma warning restore 612, 618
        }
    }
}
