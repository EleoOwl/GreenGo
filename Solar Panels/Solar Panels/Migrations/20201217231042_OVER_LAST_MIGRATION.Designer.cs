// <auto-generated />
using System;
using GreenGo.DB.API.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GreenGo.DB.API.Migrations
{
    [DbContext(typeof(PanelsContext))]
    [Migration("20201217231042_OVER_LAST_MIGRATION")]
    partial class OVER_LAST_MIGRATION
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GreenGo.DB.API.Entities.Inverter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<double>("Power");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Inverters");

                    b.HasData(
                        new { Id = new Guid("15f8c53b-e896-4c7f-891b-31393cd1736d"), Company = "not THE BEST COMPANY", Power = 24.0, Price = 8000.0 },
                        new { Id = new Guid("98c1c7d6-3afc-4ae9-9b0b-6c270676e65b"), Company = "THE BEST COMPANY", Power = 45.0, Price = 10000.0 },
                        new { Id = new Guid("1f08fc57-42e4-4af1-9409-1a92d3318980"), Company = "THE BEST COMPANY", Power = 45.0, Price = 10000.0 },
                        new { Id = new Guid("314bcebb-5583-4577-833e-7bb6a5e95ad0"), Power = 0.0, Price = 0.0 }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.Panel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company")
                        .IsRequired();

                    b.Property<double>("Power");

                    b.Property<double>("Price");

                    b.Property<double>("height");

                    b.Property<double>("width");

                    b.HasKey("Id");

                    b.ToTable("Panels");

                    b.HasData(
                        new { Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"), Company = "Green Life", Power = 45.0, Price = 4500.0, height = 40.0, width = 50.0 },
                        new { Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"), Company = "Yellow Life", Power = 60.0, Price = 7500.0, height = 50.0, width = 50.0 },
                        new { Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"), Company = "Blue Life", Power = 70.0, Price = 9500.0, height = 60.0, width = 60.0 },
                        new { Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"), Company = "Violet Life", Power = 100.0, Price = 10500.0, height = 90.0, width = 80.0 }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.ReferenceTables", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdPanel");

                    b.Property<Guid>("IdStation");

                    b.HasKey("Id");

                    b.ToTable("ReferenceTables");

                    b.HasData(
                        new { Id = new Guid("73bec3e5-e3ba-4f43-a706-c2eefa5ec9d4"), IdPanel = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"), IdStation = new Guid("5de324e0-203d-4478-8fb2-e19d686500eb") }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.SolarStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdInverter");

                    b.HasKey("Id");

                    b.ToTable("SolarStations");

                    b.HasData(
                        new { Id = new Guid("5de324e0-203d-4478-8fb2-e19d686500eb"), IdInverter = new Guid("15f8c53b-e896-4c7f-891b-31393cd1736d") },
                        new { Id = new Guid("d5db0978-13b6-4ba6-a20a-777de3d9b660"), IdInverter = new Guid("98c1c7d6-3afc-4ae9-9b0b-6c270676e65b") },
                        new { Id = new Guid("c8e840fc-f108-4a75-bff6-099d7f979bd0"), IdInverter = new Guid("1f08fc57-42e4-4af1-9409-1a92d3318980") }
                    );
                });

            modelBuilder.Entity("GreenGo.DB.API.Entities.WindTurbine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<double>("Diameter");

                    b.Property<string>("Matherial");

                    b.Property<double>("Price");

                    b.Property<double>("defPower");

                    b.Property<int>("numBlades");

                    b.HasKey("Id");

                    b.ToTable("WindTurbines");
                });
#pragma warning restore 612, 618
        }
    }
}
